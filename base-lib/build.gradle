apply plugin: 'com.android.library'

android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res',
                    'src/main/res/base-res',
            ]
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            jniLibs.srcDirs = ['libs']
        }
    }

}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api rootProject.ext.dependencies["support-v4"]
    api rootProject.ext.dependencies["support-v7"]
    api rootProject.ext.dependencies["recyclerview"]
    api rootProject.ext.dependencies["gson"]
    api rootProject.ext.dependencies["logger"]
    api rootProject.ext.dependencies["glide"]
    api rootProject.ext.dependencies["eventbus"]
    api rootProject.ext.dependencies["glide-okhttp3-integration"]
    api rootProject.ext.dependencies["permission"]
    api rootProject.ext.dependencies["okhttp"]
    api(rootProject.ext.dependencies["okgo"]) {
        exclude module: 'okhttp'
    }

    annotationProcessor rootProject.ext.dependencies["glide-compiler"]

    debugApi rootProject.ext.dependencies["leakcanary-android"]
    releaseApi rootProject.ext.dependencies["leakcanary-android-no-op"]
}
